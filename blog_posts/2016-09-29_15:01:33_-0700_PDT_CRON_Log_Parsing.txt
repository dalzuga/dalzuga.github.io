2016-09-29_15:01:33_-0700_PDT
# CRON_Log_Parsing [working title]

Recently, as my daily routine of preparing for SRE interview
questions, and Guillaume sent me a packet of exercises. While I found
it personally satisfying to use regular expressions to parse one of
its problems, this same problem was particularly sweet. I was a good
exercise in thought process, and worthy of a write-up on its own.

The exercise is as follows
```
By using this cron log:
https://s3.amazonaws.com/holbertonintranet/files/sandbox/cron Please
provide the list of all cron commands with the delay ("The cron task
'Holberton' is executed each 50 seconds")
```

Since we are in interview prep mode, we have generally considered it a
good idea to ask as many clarifying questions from the get-go. Now,
this wasn't an interview, so I didn't actually ask this question. But
I considered it important to understand and write down, for the
benefit of the exercise, assumptions that I am making when I process
the problem, (which, in an interview setting, generates the
corresponding clarifying question).

This problem jumped out at me because the assumption I generated was
particularly ugly, and worthy of further exploration:

## Explanation of assumption:

Consider, for a moment, that I parse the log correctly, that I count
all the commands, and I proudly display the delay of each command.

Since I seem to like making my job more difficult, I decided to
consider that my input data is massive. Imagine thousands of commands,
numbered 1 through n, with each of their counts accessible via a
`count` function that takes the command being run as its input.

I figured, hey, the more information I get, the more information I
have. The more information I have, the better. While this is a
terrible way to approach a problem (I will get to why later), I found
it helpful to entertain that idea for a second. For some reason, just
by thinking of this, it occurred to me that this problem must not have
a solution. Or, at least, not a unique solution. At least, not without
the clarifying question that jumped at me as follows:
"Can I assume that each command is run by exactly one CRON job?"

Since Guillaume is not generally in the habit of asking trick
questions (like Julien is) I found it safe to assume this at this
point. In an interview, I'd make sure I'd get the brownie points for
simply pointing this out.

### Assumption: each command is run by one and only one CRON job.

Now the problem is well-defined. I have this particular log; so let's
parse it.

First, I decided to count how many unique CRON commands I need to
handle. Also, I decided to count how many CRON commands there are in
total:

```
uniqueCmdCount: 10
count by CROND: 1999
```
